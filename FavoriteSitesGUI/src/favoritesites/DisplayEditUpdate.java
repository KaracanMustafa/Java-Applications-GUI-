/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package favoritesites;

import static favoritesites.MainFrame.username;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karac
 */
public class DisplayEditUpdate extends javax.swing.JFrame {
Connection myConn=new DatabaseConnection().databaseConn();
CheckValidations cv=new CheckValidations();
String username;




    /**
     * Creates new form DisplayEditUpdate
     */
    public DisplayEditUpdate() {
        username=LoginFrame.getUsername();
        initComponents();
        getVisits();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        editButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        visitIDTextField = new javax.swing.JTextField();
        countryButton = new javax.swing.JRadioButton();
        cityButton = new javax.swing.JRadioButton();
        yearButton = new javax.swing.JRadioButton();
        seasonButton = new javax.swing.JRadioButton();
        bestfeatureButton = new javax.swing.JRadioButton();
        commentButton = new javax.swing.JRadioButton();
        ratingButton = new javax.swing.JRadioButton();
        editTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Enter the ID of the visit to be edited :");

        buttonGroup1.add(countryButton);
        countryButton.setText("Country");
        countryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(cityButton);
        cityButton.setText("City");

        buttonGroup1.add(yearButton);
        yearButton.setText("Visit Year");

        buttonGroup1.add(seasonButton);
        seasonButton.setText("Visit Season");

        buttonGroup1.add(bestfeatureButton);
        bestfeatureButton.setText("Best Feature");

        buttonGroup1.add(commentButton);
        commentButton.setText("Comment");

        buttonGroup1.add(ratingButton);
        ratingButton.setText("Rating (1 - 5)");

        jLabel10.setText("New input :");

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Username", "Country", "City", "Visit Year", "Visit Season", "Best Feature", "Comment", "Rating"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 887, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                                .addComponent(editTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(updateButton)
                                .addGap(100, 100, 100)
                                .addComponent(editButton)))
                        .addContainerGap(47, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(visitIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(countryButton)
                                            .addComponent(yearButton)
                                            .addComponent(bestfeatureButton))
                                        .addGap(56, 56, 56)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(commentButton)
                                            .addComponent(seasonButton)
                                            .addComponent(cityButton)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(66, 66, 66)
                                        .addComponent(ratingButton)))
                                .addGap(32, 32, 32))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backButton)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(visitIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(yearButton)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bestfeatureButton)
                                    .addComponent(commentButton))
                                .addGap(18, 18, 18)
                                .addComponent(ratingButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(countryButton)
                                    .addComponent(cityButton))
                                .addGap(18, 18, 18)
                                .addComponent(seasonButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editButton)
                            .addComponent(updateButton))
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        if( cv.checkUsernameAndVisit(username, visitIDTextField.getText())) {

            
            try {
                if (countryButton.isSelected()){
                PreparedStatement pstmt =myConn.prepareStatement("UPDATE visits SET country_name = ? WHERE visit_id = ?");
                pstmt.setString(1, editTextField.getText());
                pstmt.setString(2, visitIDTextField.getText());
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Successfully edited !");}
                if (cityButton.isSelected()){
                PreparedStatement pstmt =myConn.prepareStatement("UPDATE visits SET city_name = ? WHERE visit_id = ?");
                pstmt.setString(1, editTextField.getText());
                pstmt.setString(2, visitIDTextField.getText());
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Successfully edited !");}
                if (yearButton.isSelected() &&  cv.checkYearValidation(editTextField.getText())){
                PreparedStatement pstmt =myConn.prepareStatement("UPDATE visits SET visit_year = ? WHERE visit_id = ?");
                pstmt.setString(1, editTextField.getText());
                pstmt.setString(2, visitIDTextField.getText());
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Successfully edited !");}
                if (seasonButton.isSelected()){
                PreparedStatement pstmt =myConn.prepareStatement("UPDATE visits SET visit_season = ? WHERE visit_id = ?");
                pstmt.setString(1, editTextField.getText());
                pstmt.setString(2, visitIDTextField.getText());
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Successfully edited !");}
                if (bestfeatureButton.isSelected()){
                PreparedStatement pstmt =myConn.prepareStatement("UPDATE visits SET best_feature = ? WHERE visit_id = ?");
                pstmt.setString(1, editTextField.getText());
                pstmt.setString(2, visitIDTextField.getText());
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Successfully edited !");}
                if (commentButton.isSelected()){
                PreparedStatement pstmt =myConn.prepareStatement("UPDATE visits SET comments = ? WHERE visit_id = ?");
                pstmt.setString(1, editTextField.getText());
                pstmt.setString(2, visitIDTextField.getText());
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Successfully edited !");}
                if (ratingButton.isSelected() && cv.checkRatingValidation(editTextField.getText())){
                PreparedStatement pstmt =myConn.prepareStatement("UPDATE visits SET rating = ? WHERE visit_id = ?");
                pstmt.setString(1, editTextField.getText());
                pstmt.setString(2, visitIDTextField.getText());
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Successfully edited !");}
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(!cv.checkUsernameAndVisit(username, visitIDTextField.getText())){
            JOptionPane.showMessageDialog(null, "You do not have this visit !","ERROR !",JOptionPane.ERROR_MESSAGE);
        }
        else if(!cv.checkRatingValidation(editTextField.getText())){
            editTextField.setText("");
        }else{
            editTextField.setText("");
        }
        editTextField.setText("");
    }//GEN-LAST:event_editButtonActionPerformed

    private void countryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countryButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        getVisits();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed
private void getVisits(){
         try {
            
            String query = "SELECT * FROM visits WHERE username = ?";
            PreparedStatement statement = myConn.prepareStatement(query);
            statement.setString(1, username);
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); 
            
            while (resultSet.next()) {
                Object[] row = {
                    resultSet.getInt("visit_id"),
                    resultSet.getString("username"),
                    resultSet.getString("country_name"),
                    resultSet.getString("city_name"),
                    resultSet.getString("visit_year"),
                    resultSet.getString("visit_season"),
                    resultSet.getString("best_feature"),
                    resultSet.getString("comments"),
                    resultSet.getString("rating")
                };
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Failed to fetch patients from the database.");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayEditUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayEditUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayEditUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayEditUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayEditUpdate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JRadioButton bestfeatureButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton cityButton;
    private javax.swing.JRadioButton commentButton;
    private javax.swing.JRadioButton countryButton;
    private javax.swing.JButton editButton;
    private javax.swing.JTextField editTextField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JRadioButton ratingButton;
    private javax.swing.JRadioButton seasonButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField visitIDTextField;
    private javax.swing.JRadioButton yearButton;
    // End of variables declaration//GEN-END:variables
}
