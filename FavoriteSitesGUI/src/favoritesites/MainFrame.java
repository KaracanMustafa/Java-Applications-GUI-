/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package favoritesites;

import com.mysql.cj.jdbc.PreparedStatementWrapper;
import java.sql.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karac
 */
public class MainFrame extends javax.swing.JFrame {
    CheckValidations cv=new CheckValidations();
static String username;
Connection myConn=new DatabaseConnection().databaseConn();
static String year;
//static String username1;
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        //readLoggedInUsername();
        username=LoginFrame.getUsername();
        initComponents();
         getVisits();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addLocationButton = new javax.swing.JButton();
        deleteLocationButton = new javax.swing.JButton();
        displayeditButton = new javax.swing.JButton();
        bestFoodButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        countryTextLabel = new javax.swing.JTextField();
        cityTextLabel = new javax.swing.JTextField();
        yearTextLabel = new javax.swing.JTextField();
        seasonTextField = new javax.swing.JTextField();
        featureTextField = new javax.swing.JTextField();
        commentsTextField = new javax.swing.JTextField();
        ratingTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        visitIDTextLabel = new javax.swing.JTextField();
        seeImageButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        yearLabelForSearch = new javax.swing.JTextField();
        displayVisitButton = new javax.swing.JButton();
        mostVisitedButton = new javax.swing.JButton();
        springVisitButton = new javax.swing.JButton();
        sharedMeButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        VisitIDtoShareTextLabel = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        friendUsernameTextLabel = new javax.swing.JTextField();
        shareButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();
        LogoutButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        changePasswordButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addLocationButton.setText("Add Location");
        addLocationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLocationButtonActionPerformed(evt);
            }
        });

        deleteLocationButton.setText("Delete Location");
        deleteLocationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteLocationButtonActionPerformed(evt);
            }
        });

        displayeditButton.setText("Display-Edit-Update");
        displayeditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayeditButtonActionPerformed(evt);
            }
        });

        bestFoodButton.setText("Best Food Countries");
        bestFoodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bestFoodButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Country :");

        jLabel2.setText("City :");

        jLabel3.setText("Visit Year :");

        jLabel4.setText("Visit Season :");

        jLabel5.setText("Best Feature :");

        jLabel6.setText("Comments :");

        jLabel7.setText("Rating :");

        jLabel8.setText("Visit ID :");

        seeImageButton.setText("See Image");
        seeImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeImageButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Visit Year :");

        displayVisitButton.setText("Display Visits");
        displayVisitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayVisitButtonActionPerformed(evt);
            }
        });

        mostVisitedButton.setText("Most Visited Countries");
        mostVisitedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostVisitedButtonActionPerformed(evt);
            }
        });

        springVisitButton.setText("Visits in Spring");
        springVisitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                springVisitButtonActionPerformed(evt);
            }
        });

        sharedMeButton.setText("Visits Shared With Me");
        sharedMeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sharedMeButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Visit ID :");

        jLabel11.setText("Friend Username :");

        shareButton.setText("Share");
        shareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shareButtonActionPerformed(evt);
            }
        });

        jLabel12.setText("(1 - 5)");

        LogoutButton.setText("Log out");
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });

        jLabel13.setText("Share With Friend");

        updateButton.setText("Update Table");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        changePasswordButton.setText("Change Password");
        changePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Username", "Country", "City", "Visit Year", "Visit Season", "Best Feature", "Comment", "Rating"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel14.setText("Update Default");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(addLocationButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(featureTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(seasonTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(yearTextLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cityTextLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(countryTextLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ratingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(commentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(changePasswordButton)
                        .addGap(26, 26, 26)
                        .addComponent(LogoutButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(updateButton))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(deleteLocationButton)
                                        .addGap(2, 2, 2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(visitIDTextLabel)
                                            .addComponent(yearLabelForSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(seeImageButton))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(displayVisitButton))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(mostVisitedButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(springVisitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bestFoodButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(displayeditButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(sharedMeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(30, 30, 30)
                                                .addComponent(friendUsernameTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(56, 56, 56)
                                                .addComponent(jLabel13))))
                                    .addComponent(VisitIDtoShareTextLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(shareButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(imageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LogoutButton)
                            .addComponent(changePasswordButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(countryTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cityTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(yearTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(seasonTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addComponent(jLabel13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(30, 30, 30))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(friendUsernameTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(VisitIDtoShareTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shareButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(visitIDTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(seeImageButton)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addComponent(deleteLocationButton)
                                .addGap(76, 76, 76)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(yearLabelForSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(displayVisitButton)))
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(springVisitButton)
                        .addGap(9, 9, 9)
                        .addComponent(mostVisitedButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bestFoodButton)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayeditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sharedMeButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(featureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(commentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ratingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addLocationButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
    private void addLocationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLocationButtonActionPerformed
        if(cv.checkRatingValidation(ratingTextField.getText()) && cv.checkYearValidation(yearTextLabel.getText())) {
      
        
    try {
        PreparedStatement pstmt =myConn.prepareStatement("INSERT INTO visits (username, country_name,city_name,visit_year,visit_season,best_feature,comments,rating)"+
                                                   "VALUES (?,?,?,?,?,?,?,?)");
            pstmt.setString(1, username);
            pstmt.setString(2, countryTextLabel.getText());
            pstmt.setString(3, cityTextLabel.getText());
            pstmt.setInt(4, Integer.parseInt(yearTextLabel.getText()));
            pstmt.setString(5, seasonTextField.getText());
            pstmt.setString(6, featureTextField.getText());
            pstmt.setString(7, commentsTextField.getText());
            pstmt.setInt(8, Integer.parseInt(ratingTextField.getText()));
            pstmt.executeUpdate();
            countryTextLabel.setText("");
            cityTextLabel.setText("");
            yearTextLabel.setText("");
            seasonTextField.setText("");
            featureTextField.setText("");
            commentsTextField.setText("");
            ratingTextField.setText("");
            JOptionPane.showMessageDialog(null, "Successfully added !");
    } catch (SQLException ex) {
        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
        }else if(!cv.checkRatingValidation(ratingTextField.getText())){
            ratingTextField.setText("");
        }else{
            yearTextLabel.setText("");
        }
    }//GEN-LAST:event_addLocationButtonActionPerformed

    private void seeImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeImageButtonActionPerformed
        if(cv.checkVisitID(visitIDTextLabel.getText())){
        ImageIcon image=new ImageIcon("src\\Location"+visitIDTextLabel.getText()+".jpg");
   imageLabel.setIcon(image);
        }else{
            JOptionPane.showMessageDialog(null, "There is no visit with this ID !","ERROR !",JOptionPane.ERROR_MESSAGE);
            visitIDTextLabel.setText("");
        }
    }//GEN-LAST:event_seeImageButtonActionPerformed

    private void deleteLocationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteLocationButtonActionPerformed
    if(cv.checkVisitID(visitIDTextLabel.getText()) && cv.checkUsernameAndVisit(username, visitIDTextLabel.getText())){
        try {
        PreparedStatement pstmt=myConn.prepareStatement("DELETE FROM visits WHERE visit_id = ?");
        pstmt.setInt(1, Integer.parseInt(visitIDTextLabel.getText()));
        if(pstmt.executeUpdate()>0){
            JOptionPane.showMessageDialog(null, "Visit is deleted successfully.");
        }else{
            JOptionPane.showMessageDialog(null, "Please enter a valid visit ID!","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException ex) {
        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
    }else{
           JOptionPane.showMessageDialog(null, "There is no visit with this ID !","ERROR !",JOptionPane.ERROR_MESSAGE);
           visitIDTextLabel.setText("");
    }
    }//GEN-LAST:event_deleteLocationButtonActionPerformed

    private void shareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shareButtonActionPerformed
        
        if(cv.checkFriendUsernameExists(friendUsernameTextLabel.getText()) && cv.checkVisitID(VisitIDtoShareTextLabel.getText()) && cv.checkUsernameAndVisit(username, VisitIDtoShareTextLabel.getText())){
    try {
        PreparedStatement pstmt=myConn.prepareStatement("INSERT INTO sharedvisits (username, friend_username, visit_id)"+"VALUES(?,?,?)");
        pstmt.setString(1, username);
        pstmt.setString(2, friendUsernameTextLabel.getText());
        pstmt.setInt(3, Integer.parseInt(VisitIDtoShareTextLabel.getText()));
        pstmt.executeUpdate();
        JOptionPane.showMessageDialog(null, "Successfully Shared.");
    } catch (SQLException ex) {
        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
        }else if(!cv.checkFriendUsernameExists(friendUsernameTextLabel.getText())){
            JOptionPane.showMessageDialog(null, "There is no user with this name ! ","ERROR !",JOptionPane.ERROR_MESSAGE);
            friendUsernameTextLabel.setText("");
        }else if(!cv.checkVisitID(VisitIDtoShareTextLabel.getText())){
            JOptionPane.showMessageDialog(null, "There is no visit with this ID !","ERROR !",JOptionPane.ERROR_MESSAGE);
            visitIDTextLabel.setText("");
        }else{
            JOptionPane.showMessageDialog(null, "You do not have a visit with this ID !","ERROR !",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_shareButtonActionPerformed
   private void getVisits(){
        try {
            String query = "SELECT * FROM visits WHERE username = ?";
            PreparedStatement statement = myConn.prepareStatement(query);
            statement.setString(1, username);
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); 
            
            while (resultSet.next()) {
                Object[] row = {
                    resultSet.getInt("visit_id"),
                    resultSet.getString("username"),
                    resultSet.getString("country_name"),
                    resultSet.getString("city_name"),
                    resultSet.getString("visit_year"),
                    resultSet.getString("visit_season"),
                    resultSet.getString("best_feature"),
                    resultSet.getString("comments"),
                    resultSet.getString("rating")
                };
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Failed to fetch patients from the database.");
        }
    }
    public static String getYearToSearch(){
        return year;
    }
    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        dispose();
        new LoginFrame().setVisible(true);
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void bestFoodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bestFoodButtonActionPerformed
           try {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/favoritesitesdatabase", "root", "12345678");
            String query = "SELECT * FROM visits WHERE username = ? and best_feature = ?";
            PreparedStatement statement = connection.prepareStatement(query);
            statement.setString(1, username);
            statement.setString(2, "Foods");
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); 
            
            while (resultSet.next()) {
                Object[] row = {
                    resultSet.getInt("visit_id"),
                    resultSet.getString("username"),
                    resultSet.getString("country_name"),
                    resultSet.getString("city_name"),
                    resultSet.getString("visit_year"),
                    resultSet.getString("visit_season"),
                    resultSet.getString("best_feature"),
                    resultSet.getString("comments"),
                    resultSet.getString("rating")
                };
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Failed to fetch patients from the database.");
        }
         //new BestFoodCountries().setVisible(true);

    }//GEN-LAST:event_bestFoodButtonActionPerformed

    private void springVisitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_springVisitButtonActionPerformed
        try {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/favoritesitesdatabase", "root", "12345678");
            String query = "SELECT * FROM visits WHERE username = ? and visit_season = ?";
            PreparedStatement statement = connection.prepareStatement(query);
            statement.setString(1, username);
            statement.setString(2, "Spring");
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); 
            
            while (resultSet.next()) {
                Object[] row = {
                    resultSet.getInt("visit_id"),
                    resultSet.getString("username"),
                    resultSet.getString("country_name"),
                    resultSet.getString("city_name"),
                    resultSet.getString("visit_year"),
                    resultSet.getString("visit_season"),
                    resultSet.getString("best_feature"),
                    resultSet.getString("comments"),
                    resultSet.getString("rating")
                };
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Failed to fetch patients from the database.");
        }
      
        
//new VisitsInSpring().setVisible(true);
    }//GEN-LAST:event_springVisitButtonActionPerformed

    private void displayVisitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayVisitButtonActionPerformed
       year=yearLabelForSearch.getText();
       
       if(cv.checkYearValidation(year) && cv.checkSqlExistYear(year)){
        try {
            
            String query = "SELECT * FROM visits WHERE username = ? and visit_year = ?";
            PreparedStatement statement = myConn.prepareStatement(query);
            statement.setString(1, username);
            statement.setString(2, yearLabelForSearch.getText());
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); 
            
            while (resultSet.next()) {
                Object[] row = {
                    resultSet.getInt("visit_id"),
                    resultSet.getString("username"),
                    resultSet.getString("country_name"),
                    resultSet.getString("city_name"),
                    resultSet.getString("visit_year"),
                    resultSet.getString("visit_season"),
                    resultSet.getString("best_feature"),
                    resultSet.getString("comments"),
                    resultSet.getString("rating")
                };
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Failed to fetch patients from the database.");
        }}
       else if(!cv.checkSqlExistYear(year)){
           JOptionPane.showMessageDialog(null, "There is no visit in selected year !","ERROR !",JOptionPane.ERROR_MESSAGE);
       }
    }//GEN-LAST:event_displayVisitButtonActionPerformed

    private void mostVisitedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostVisitedButtonActionPerformed
        new MostVisitedCountries().setVisible(true);
    }//GEN-LAST:event_mostVisitedButtonActionPerformed

    private void sharedMeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sharedMeButtonActionPerformed
      new SharedMeVisits().setVisible(true);
    }//GEN-LAST:event_sharedMeButtonActionPerformed

    private void displayeditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayeditButtonActionPerformed
      new DisplayEditUpdate().setVisible(true);
    }//GEN-LAST:event_displayeditButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
       getVisits();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void changePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordButtonActionPerformed
        new ChangePassword().setVisible(true);
    }//GEN-LAST:event_changePasswordButtonActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LogoutButton;
    private javax.swing.JTextField VisitIDtoShareTextLabel;
    private javax.swing.JButton addLocationButton;
    private javax.swing.JButton bestFoodButton;
    private javax.swing.JButton changePasswordButton;
    private javax.swing.JTextField cityTextLabel;
    private javax.swing.JTextField commentsTextField;
    private javax.swing.JTextField countryTextLabel;
    private javax.swing.JButton deleteLocationButton;
    private javax.swing.JButton displayVisitButton;
    private javax.swing.JButton displayeditButton;
    private javax.swing.JTextField featureTextField;
    private javax.swing.JTextField friendUsernameTextLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton mostVisitedButton;
    private javax.swing.JTextField ratingTextField;
    private javax.swing.JTextField seasonTextField;
    private javax.swing.JButton seeImageButton;
    private javax.swing.JButton shareButton;
    private javax.swing.JButton sharedMeButton;
    private javax.swing.JButton springVisitButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField visitIDTextLabel;
    private javax.swing.JTextField yearLabelForSearch;
    private javax.swing.JTextField yearTextLabel;
    // End of variables declaration//GEN-END:variables
}
